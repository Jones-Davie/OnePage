@import url('https://fonts.googleapis.com/css?family=Lato:400,700&display=swap');

/*  body  */
html, body {
    overflow-x: hidden!important;
    font-family: 'Lato', sans-serif;
    color: rgb(37, 37, 37);
}

/* navbar */
.navbar {
    text-transform: uppercase;
    font-weight: 700;
    letter-spacing:  .1rem;
    background-color: rgba(0, 0, 0, .75)!important;
}

.navbar-brand img {
    height: 2.5rem;
    padding-right: .9rem;
}

.navbar-dark .navbar-nav .nav-link {
    color: white;
    padding-top: .6rem;
}

.navbar-dark .navbar-nav .nav-link:hover, 
.navbar-dark .navbar-nav .nav-link.active
 {
    color:rgb(185, 21, 21);
    padding-top: .7rem;
    border-bottom: .1rem solid white;
}

/* carousel  */
.carousel-item {
    height: 100vh;
    max-height: 1080px;
    background-repeat: no-repeat ;
    background-position: center;
}

.carousel-caption {
    position: absolute;
    top: 35%;
    /* width: 100%; left: 0; right: 0; could be used if the text was smaller*/
    text-shadow: 0 0 1.8rem darkgray;
    text-transform: uppercase;
}

.carousel-caption h1 {
    letter-spacing: .3rem;
    font-size: 2.5rem;
    font-weight: 700;
    padding-bottom: 1rem;
}

.carousel-caption h3 {
    font-size: 1.2rem;
    font-weight: 500;
}

/* Heading */
.heading {
    letter-spacing: .2rem;
    font-weight: 700;
    text-transform: uppercase;
}

.heading:after {
    content: '';
    display: block; /* This will put the element on its own line. */
    width: 25%; 
    padding-top: 1rem;
    margin: 0 auto; /* This will center the element */
    border-bottom: .2rem solid rgb(185, 21, 21);
    border-radius: .2rem;
}

/* cards */
.card {
    margin: 2rem;
}


/* portfolio */

.jumbotron {
    padding: 1.7rem 0 1.7rem;
    border-radius: 0; /* get rid of rounded corners of jumbotron */
}

#portfolio img {
    transition: .5s ease;
}

#portfolio img:hover {
    overflow: hidden;
    transform: scale(1.1);
}

#portfolio .row.no-padding [class*=col-] {
    padding: 0;
}

/* col-12 doesn't display padding for some reason */
.col-12 {
    padding: .9rem;
}

/* make an offset class to jump to the different sections of the page  */
.offset:before {
    content:'';
    display: block;
    height: 3.8rem;
    margin-top: -2.8rem;
}

/* footer */
footer {
    padding: 1.6rem;
}

footer a {
    color: white;
    font-size: 1rem;
    margin: 1rem 0.5rem 0 0;
}

footer a:hover {
    color: rgb(185, 21, 21);
}

.copy {
    border: .1rem solid lightgrey;
    border-radius: .1rem;
}


/* Bootstrap breakpoints

Small devices (sm), landscape phones, 576px and up

Medium devices (md), tablets, 768px and up

Large devices (lg), desktops, 992px and up

Extra large devices (xl), large desktops, 1200px and up

*/

/* 

    reminders

    * selects everying except :before :after. To select everying do *, *::before, *::after

    box-sizing: border-box; makes the box scaling more absolute and easier to manage since the box scaling will include the content/padding/border instead of just content

    selectors can be .portfolio img { } to adress children
    selectors can be .portfolio > img { } to only adress direct children and not select an img of portfolio wrapped in a different div e.g. <div class="portfolio"> <div>  <img /> </div> </div>

    selectors of a class can get siblings adjacent to another like .portfolio .box + .box, which will only select boxes adjacent to the first identified .box.
    selectors of a class can get siblings adjacent to another like .portfolio .box ~ .box which will select every .box after the first identified .box in the wrapped section

    you can select based on attributes like [target] which will only select html elements that use the target="" attribute
    this can also be defined using a previous selector like a [target] or a [href]
    this can also be specified further by selecting only e.g. a [href="thisparticularpage.com"], not that after the = sign a absolute match must be found and not a partial match. [href="this"] will not work.
    [href|="this"] will select any href starting with a whole word "this" which can be separated by - signs
    [href^="this"] will select any href starting with a partial work "this"
    [href*="this"] will select any href containing the whole word "this" 
    [href$="this"] will select any href ending with "this" which can be handy for finding specific file extensions

    :after will activate anytime the selector before it has been activated. 
    :before will do the same except it will show up before
        with these you can Use content='' to add (empty) text or an url like content: url(someimg.png)
        display:block to give it its own separate line
        display: inline block; to give it a better placement next to it's :before/after element

*/